// Copyright (c) 2022 The ZMK Contributors
// SPDX-License-Identifier: MIT

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

// Home row mods macro

#define HRML(k1,k2,k3,k4) &ht LSHFT k1  &ht LALT k2  &ht LCTRL k3  &ht LGUI k4
#define HRMR(k1,k2,k3,k4) &ht RGUI k1  &ht RCTRL k2  &ht RALT k3  &ht RSHFT k4

&mt { quick-tap-ms = <180>; };

/ {
    behaviors {
        ht: hold_tap {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <220>;
            quick-tap-ms = <150>;
            require-prior-idle-ms = <100>;
            bindings = <&kp>, <&kp>;
        };

        tdtab: tdtab {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp TAB>, <&kp ESC>;
        };

        tdquote: tdquote {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp SINGLE_QUOTE>, <&kp DOUBLE_QUOTES>;
        };

        hrmod: hrmod {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            quick-tap-ms = <200>;
            tapping-term-ms = <200>;
            require-prior-idle-ms = <125>;
            bindings = <&kp>, <&kp>;
        };

        hrmod_l: hrmod_l {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "hold-preferred";
            quick-tap-ms = <200>;
            tapping-term-ms = <200>;
            require-prior-idle-ms = <80>;
            bindings = <&mo>, <&kp>;
        };
    };

    combos {
        compatible = "zmk,combos";

        combo_numbers {
            timeout-ms = <50>;
            key-positions = <30 33>;
            bindings = <&mo 2>;
        };

        combo_alt {
            timeout-ms = <50>;
            key-positions = <31 32>;
            bindings = <&mo 3>;
        };

        delete-word {
            bindings = <&kp LC(BACKSPACE)>;
            key-positions = <26 25>;
        };

        uparrow {
            bindings = <&kp UP_ARROW>;
            key-positions = <6 7>;
        };

        downarrow {
            bindings = <&kp DOWN>;
            key-positions = <16 17>;
        };

        leftarrow {
            bindings = <&kp LEFT>;
            key-positions = <16 15>;
        };

        rightarrow {
            bindings = <&kp RIGHT>;
            key-positions = <17 18>;
        };

        entercombo {
            bindings = <&kp ENTER>;
            key-positions = <26 27>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q  &kp W  &kp E  &kp R               &kp T     &kp Y             &kp U                     &kp I      &kp O    &kp P
&kp A  &kp S  &kp D  &kp F               &kp G     &kp H             &kp J                     &kp K      &kp L    &hrmod RGUI SEMI
&kp Z  &kp X  &kp C  &kp V               &kp B     &kp N             &kp M                     &kp COMMA  &kp DOT  &kp FSLH
                     &hrmod LCTRL SPACE  &tdtab    &hrmod_l 1 ENTER  &mt LEFT_SHIFT BACKSPACE
            >;
        };

        right_layer {
            bindings = <
&kp LS(N1)     &kp LS(N2)   &kp LS(N3)    &kp LS(N4)    &kp LS(N5)    &kp LS(N6)    &kp LS(N7)  &kp LS(N8)  &kp LS(EQUAL)  &kp LS(GRAVE)
&kp LBKT       &kp RBKT     &kp LS(N9)    &kp LS(N0)    &none         &kp LS(BSLH)  &kp EQUAL   &tdquote    &kp MINUS      &kp LS(SEMI)
&kp LS(COMMA)  &kp LS(DOT)  &kp LS(LBKT)  &kp LS(RBKT)  &none         &kp BSLH      &kp QMARK   &kp GRAVE   &kp LS(MINUS)  &trans
                                          &trans        &trans        &trans        &trans
            >;
        };

        left_layer {
            bindings = <
&kp F12  &kp F7  &kp F8  &kp F9  &kp C_VOL_UP    &kp LS(PG_UP)  &kp N7  &kp N8  &kp N9  &kp LCTRL
&kp F11  &kp F4  &kp F5  &kp F6  &kp C_VOL_DN    &kp LS(PG_DN)  &kp N4  &kp N5  &kp N6  &kp LEFT_GUI
&kp F10  &kp F1  &kp F2  &kp F3  &kp K_MUTE      &kp N0         &kp N1  &kp N2  &kp N3  &kp LEFT_SHIFT
                         &trans  &trans          &trans         &trans
            >;
        };

        tri_layer {
            bindings = <
&sys_reset   &trans          &kp UP_ARROW    &trans           &bt BT_SEL 0    &out OUT_USB  &out OUT_BLE  &none         &trans           &sys_reset
&bootloader  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &bt BT_SEL 1    &kp LEFT      &kp DOWN      &kp UP_ARROW  &kp RIGHT_ARROW  &bootloader
&trans       &trans          &bt BT_CLR_ALL  &bt BT_CLR       &bt BT_SEL 2    &trans        &trans        &trans        &trans           &trans
                                             &trans           &trans          &trans        &trans
            >;
        };
    };
};
